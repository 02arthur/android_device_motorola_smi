From 87153c5fe739ad8cc06b4e097bab1d187bbde260 Mon Sep 17 00:00:00 2001
From: Patrick Harbers <jgrharbers@gmail.com>
Date: Sun, 14 Apr 2013 20:52:22 +0200
Subject: [PATCH] Busybox x86 files

---
 Android.mk                                | 35 +++++++++++++------------------
 android/libc/arch-x86/syscalls/adjtimex.S | 24 +++++++++++++++++++++
 android/libc/arch-x86/syscalls/getsid.S   | 24 +++++++++++++++++++++
 android/libc/arch-x86/syscalls/stime.S    | 25 ++++++++++++++++++++++
 android/libc/arch-x86/syscalls/swapoff.S  | 24 +++++++++++++++++++++
 android/libc/arch-x86/syscalls/swapon.S   | 27 ++++++++++++++++++++++++
 android/libc/arch-x86/syscalls/sysinfo.S  | 24 +++++++++++++++++++++
 7 files changed, 162 insertions(+), 21 deletions(-)
 create mode 100644 android/libc/arch-x86/syscalls/adjtimex.S
 create mode 100644 android/libc/arch-x86/syscalls/getsid.S
 create mode 100644 android/libc/arch-x86/syscalls/stime.S
 create mode 100644 android/libc/arch-x86/syscalls/swapoff.S
 create mode 100644 android/libc/arch-x86/syscalls/swapon.S
 create mode 100644 android/libc/arch-x86/syscalls/sysinfo.S

diff --git a/Android.mk b/Android.mk
index 9df85da..459e890 100644
--- a/Android.mk
+++ b/Android.mk
@@ -35,15 +35,20 @@ include $(CLEAR_VARS)
 
 # Execute make clean, make prepare and copy profiles required for normal & static lib (recovery)
 
+# Required to change arm-eabi- in .config, but keep the alias on arm (not arm-linux-androideabi-)
+BB_CROSS_COMPILE := $(shell basename $(TARGET_TOOLS_PREFIX))
+ifeq ($(TARGET_ARCH),arm)
+    BB_CROSS_COMPILE = arm-eabi-
+endif
+
 KERNEL_MODULES_DIR ?= /system/lib/modules
 BUSYBOX_CONFIG := minimal full
 $(BUSYBOX_CONFIG):
 	@echo -e ${CL_PFX}"prepare config for busybox $@ profile"${CL_RST}
 	@cd $(BB_PATH) && make clean
 	@cd $(BB_PATH) && git clean -f -- ./include-$@/
-	cp $(BB_PATH)/.config-$@ $(BB_PATH)/.config
+	@sed 's/arm-eabi-/$(BB_CROSS_COMPILE)/g' $(BB_PATH)/.config-$@ > $(BB_PATH)/.config
 	cd $(BB_PATH) && make prepare
-	@#cp $(BB_PATH)/.config $(BB_PATH)/.config-$@
 	@mkdir -p $(BB_PATH)/include-$@
 	cp $(BB_PATH)/include/*.h $(BB_PATH)/include-$@/
 	@rm $(BB_PATH)/include/usage_compressed.h
@@ -66,25 +71,13 @@ SUBMAKE := make -s -C $(BB_PATH) CC=$(CC)
 BUSYBOX_SRC_FILES = $(shell cat $(BB_PATH)/busybox-$(BUSYBOX_CONFIG).sources) \
 	libbb/android.c
 
-ifeq ($(TARGET_ARCH),arm)
-	BUSYBOX_SRC_FILES += \
-	android/libc/arch-arm/syscalls/adjtimex.S \
-	android/libc/arch-arm/syscalls/getsid.S \
-	android/libc/arch-arm/syscalls/stime.S \
-	android/libc/arch-arm/syscalls/swapon.S \
-	android/libc/arch-arm/syscalls/swapoff.S \
-	android/libc/arch-arm/syscalls/sysinfo.S
-endif
-
-ifeq ($(TARGET_ARCH),mips)
-	BUSYBOX_SRC_FILES += \
-	android/libc/arch-mips/syscalls/adjtimex.S \
-	android/libc/arch-mips/syscalls/getsid.S \
-	android/libc/arch-mips/syscalls/stime.S \
-	android/libc/arch-mips/syscalls/swapon.S \
-	android/libc/arch-mips/syscalls/swapoff.S \
-	android/libc/arch-mips/syscalls/sysinfo.S
-endif
+BUSYBOX_SRC_FILES += \
+	android/libc/arch-$(TARGET_ARCH)/syscalls/adjtimex.S \
+	android/libc/arch-$(TARGET_ARCH)/syscalls/getsid.S \
+	android/libc/arch-$(TARGET_ARCH)/syscalls/stime.S \
+	android/libc/arch-$(TARGET_ARCH)/syscalls/swapon.S \
+	android/libc/arch-$(TARGET_ARCH)/syscalls/swapoff.S \
+	android/libc/arch-$(TARGET_ARCH)/syscalls/sysinfo.S
 
 BUSYBOX_C_INCLUDES = \
 	$(BB_PATH)/include-$(BUSYBOX_CONFIG) \
diff --git a/android/libc/arch-x86/syscalls/adjtimex.S b/android/libc/arch-x86/syscalls/adjtimex.S
new file mode 100644
index 0000000..4b24afc
--- /dev/null
+++ b/android/libc/arch-x86/syscalls/adjtimex.S
@@ -0,0 +1,24 @@
+/* autogenerated by gensyscalls.py */
+#include <asm/unistd.h>
+#include <sys/linux-syscalls.h>
+
+    .text
+    .type adjtimex, @function
+    .globl adjtimex
+    .align 4
+
+adjtimex:
+    pushl   %ebx
+    mov     8(%esp), %ebx
+    movl    $__NR_adjtimex, %eax
+    int     $0x80
+    cmpl    $-129, %eax
+    jb      1f
+    negl    %eax
+    pushl   %eax
+    call    __set_errno
+    addl    $4, %esp
+    orl     $-1, %eax
+1:
+    popl    %ebx
+    ret
diff --git a/android/libc/arch-x86/syscalls/getsid.S b/android/libc/arch-x86/syscalls/getsid.S
new file mode 100644
index 0000000..5ed6074
--- /dev/null
+++ b/android/libc/arch-x86/syscalls/getsid.S
@@ -0,0 +1,24 @@
+/* autogenerated by gensyscalls.py */
+#include <asm/unistd.h>
+#include <sys/linux-syscalls.h>
+
+    .text
+    .type getsid, @function
+    .globl getsid
+    .align 4
+
+getsid:
+    pushl   %ebx
+    mov     8(%esp), %ebx
+    movl    $__NR_getsid, %eax
+    int     $0x80
+    cmpl    $-129, %eax
+    jb      1f
+    negl    %eax
+    pushl   %eax
+    call    __set_errno
+    addl    $4, %esp
+    orl     $-1, %eax
+1:
+    popl    %ebx
+    ret
diff --git a/android/libc/arch-x86/syscalls/stime.S b/android/libc/arch-x86/syscalls/stime.S
new file mode 100644
index 0000000..384df77
--- /dev/null
+++ b/android/libc/arch-x86/syscalls/stime.S
@@ -0,0 +1,25 @@
+/* autogenerated by gensyscalls.py */
+#define __KERNEL__
+#include <asm/unistd.h>
+#include <sys/linux-syscalls.h>
+
+    .text
+    .type stime, @function
+    .globl stime
+    .align 4
+
+stime:
+    pushl   %ebx
+    mov     8(%esp), %ebx
+    movl    $__NR_stime, %eax
+    int     $0x80
+    cmpl    $-129, %eax
+    jb      1f
+    negl    %eax
+    pushl   %eax
+    call    __set_errno
+    addl    $4, %esp
+    orl     $-1, %eax
+1:
+    popl    %ebx
+    ret
diff --git a/android/libc/arch-x86/syscalls/swapoff.S b/android/libc/arch-x86/syscalls/swapoff.S
new file mode 100644
index 0000000..510290f
--- /dev/null
+++ b/android/libc/arch-x86/syscalls/swapoff.S
@@ -0,0 +1,24 @@
+/* autogenerated by gensyscalls.py */
+#include <asm/unistd.h>
+#include <sys/linux-syscalls.h>
+
+    .text
+    .type swapoff, @function
+    .globl swapoff
+    .align 4
+
+swapoff:
+    pushl   %ebx
+    mov     8(%esp), %ebx
+    movl    $__NR_swapoff, %eax
+    int     $0x80
+    cmpl    $-129, %eax
+    jb      1f
+    negl    %eax
+    pushl   %eax
+    call    __set_errno
+    addl    $4, %esp
+    orl     $-1, %eax
+1:
+    popl    %ebx
+    ret
diff --git a/android/libc/arch-x86/syscalls/swapon.S b/android/libc/arch-x86/syscalls/swapon.S
new file mode 100644
index 0000000..2913661
--- /dev/null
+++ b/android/libc/arch-x86/syscalls/swapon.S
@@ -0,0 +1,27 @@
+/* autogenerated by gensyscalls.py */
+#include <asm/unistd.h>
+#include <sys/linux-syscalls.h>
+
+    .text
+    .type swapon, @function
+    .globl swapon
+    .align 4
+
+swapon:
+    pushl   %ebx
+    pushl   %ecx
+    mov     12(%esp), %ebx
+    mov     16(%esp), %ecx
+    movl    $__NR_swapon, %eax
+    int     $0x80
+    cmpl    $-129, %eax
+    jb      1f
+    negl    %eax
+    pushl   %eax
+    call    __set_errno
+    addl    $4, %esp
+    orl     $-1, %eax
+1:
+    popl    %ecx
+    popl    %ebx
+    ret
diff --git a/android/libc/arch-x86/syscalls/sysinfo.S b/android/libc/arch-x86/syscalls/sysinfo.S
new file mode 100644
index 0000000..e4bffe5
--- /dev/null
+++ b/android/libc/arch-x86/syscalls/sysinfo.S
@@ -0,0 +1,24 @@
+/* autogenerated by gensyscalls.py */
+#include <asm/unistd.h>
+#include <sys/linux-syscalls.h>
+
+    .text
+    .type sysinfo, @function
+    .globl sysinfo
+    .align 4
+
+sysinfo:
+    pushl   %ebx
+    mov     8(%esp), %ebx
+    movl    $__NR_sysinfo, %eax
+    int     $0x80
+    cmpl    $-129, %eax
+    jb      1f
+    negl    %eax
+    pushl   %eax
+    call    __set_errno
+    addl    $4, %esp
+    orl     $-1, %eax
+1:
+    popl    %ebx
+    ret
-- 
1.8.1.2

